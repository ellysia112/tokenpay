on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ubuntu20:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Update apt repositories
        run: sudo apt-get update

      - name: Install essential tools
        run: |
          sudo apt-get install -y \
          build-essential \
          xutils-dev \
          libicu-dev \
          dos2unix \
          ninja-build \
          libtool \
          gperf \
          autotools-dev \
          automake \
          pkg-config \
          bsdmainutils \
          libattr1-dev \
          make \
          bison \
          byacc \
          cmake \
          curl \
          ruby \
          flex \
          g++-multilib \
          binutils-gold \
          python2 \
          coreutils \
          libleveldb-dev \
          libsqlite3-dev \
          libwebp-dev \
          libxml2-dev \
          libxslt1-dev \
          xserver-xorg-dev \
          xorg-dev \
          libpulse-dev \
          libfontconfig1-dev \
          libfreetype6-dev \
          libx11-dev \
          libx11-xcb-dev \
          libxext-dev \
          libxfixes-dev \
          libxi-dev \
          libxrender-dev \
          libxcb1-dev \
          libxcb-glx0-dev \
          libxcb-keysyms1-dev \
          libxcb-image0-dev \
          libxcb-shm0-dev \
          libxcb-icccm4-dev \
          libxcb-sync-dev \
          libxcb-xfixes0-dev \
          libxcb-shape0-dev \
          libxcb-randr0-dev \
          libxcb-render-util0-dev \
          libxcb-xinerama0-dev \
          libxkbcommon-dev \
          libxkbcommon-x11-dev \
          xserver-xorg-dev \
          xorg-dev \
          libxrender-dev \
          libxrandr-dev \
          libxt-dev \
          libxcb-xinerama0 \
          libxcb-xinerama0-dev

      - name: Set Python 2 as default
        run: |
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 2
          sudo update-alternatives --set python /usr/bin/python2
          echo "$(dirname $(readlink -f $(which python)))" >> $GITHUB_PATH
          
      - name: Check sqlite3 version
        run: sqlite3 --version
      - name: Reinstall sqlite3
        run: |
          download_link="https://www.sqlite.org/2023/sqlite-tools-linux-x64-3440200.zip"
          wget "$download_link" -P /tmp
          unzip "/tmp/$(basename "$download_link")" -d /tmp
          sudo install /tmp/sqlite3 /usr/local/bin/\
          
      - name: Check sqlite3 version
        run: sqlite3 --version

      - name: Verify Python Version
        run: python --version  # Should print Python 2.7.x

      - name: Build dependencies
        run: cd depends && make -j8 HOST=x86_64-linux-gnu

      - name: Create berkeley db directories
        run: |
          mkdir -p db-4.8.30.NC/build_unix

      - name: Copy database static library
        run: cp $GITHUB_WORKSPACE/depends/x86_64-linux-gnu/lib/libdb_cxx.a $GITHUB_WORKSPACE/db-4.8.30.NC/build_unix/
        
      - name: list made depends
        run: cd $GITHUB_WORKSPACE/depends/x86_64-linux-gnu/ && ls -l
        
      - name: list made depends share
        run: cd $GITHUB_WORKSPACE/depends/x86_64-linux-gnu/share && ls -l
        
      - name: list made depends share pkgconfig
        run: cd $GITHUB_WORKSPACE/depends/x86_64-linux-gnu/share/pkgconfig && ls -l
        
      - name: list made depends include
        run: cd $GITHUB_WORKSPACE/depends/x86_64-linux-gnu/include && ls -l
        
      - name: list made depends include QtWebKit
        run: cd $GITHUB_WORKSPACE/depends/x86_64-linux-gnu/include/QtWebKit && ls -l
        
      - name: list made depends include QtWebKit/5.6.0
        run: cd $GITHUB_WORKSPACE/depends/x86_64-linux-gnu/include/QtWebKit/5.6.0 && ls -l
        
      - name: list made depends include QtCore
        run: cd $GITHUB_WORKSPACE/depends/x86_64-linux-gnu/include/QtCore && ls -l
        
      - name: list made depends include boost
        run: cd $GITHUB_WORKSPACE/depends/x86_64-linux-gnu/include/boost && ls -l

      - name: list made depends lib pkgconfig
        run: cd $GITHUB_WORKSPACE/depends/x86_64-linux-gnu/lib/pkgconfig && ls -l
        
      - name: list made depends bin
        run: cd $GITHUB_WORKSPACE/depends/x86_64-linux-gnu/bin && ls -l
        
      - name: list made depends native
        run: cd $GITHUB_WORKSPACE/depends/x86_64-linux-gnu/native && ls -l
        
      - name: list made depends native bin
        run: cd $GITHUB_WORKSPACE/depends/x86_64-linux-gnu/native/bin && ls -l

      - name: List built dependencies
        run: ls -l $GITHUB_WORKSPACE/depends/x86_64-linux-gnu/lib

      - name: Add paths to environment
        run: |
          echo "LIBRARY_PATH=$GITHUB_WORKSPACE/depends/x86_64-linux-gnu/lib:\$LIBRARY_PATH" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$GITHUB_WORKSPACE/depends/x86_64-linux-gnu/lib:\$LD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "CXXFLAGS=-I$GITHUB_WORKSPACE/depends/x86_64-linux-gnu/include \$CXXFLAGS" >> $GITHUB_ENV
          echo "CPPFLAGS=-I$GITHUB_WORKSPACE/depends/x86_64-linux-gnu/include \$CPPFLAGS" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=$GITHUB_WORKSPACE/depends/x86_64-linux-gnu/lib/pkgconfig:\$PKG_CONFIG_PATH" >> $GITHUB_ENV

      - name: Add binary paths to PATH
        run: echo "$GITHUB_WORKSPACE/depends/x86_64-linux-gnu/native/bin" >> $GITHUB_PATH

      - name: Verify environment variables
        run: |
          echo "LIBRARY_PATH: $LIBRARY_PATH"
          echo "LD_LIBRARY_PATH: $LD_LIBRARY_PATH"
          echo "CXXFLAGS: $CXXFLAGS"
          echo "CPPFLAGS: $CPPFLAGS"
          echo "PKG_CONFIG_PATH: $PKG_CONFIG_PATH"

      - name: Verify pkg-config
        run: |
          pkg-config --libs Qt5WebKit
          pkg-config --libs Qt5WebKitWidgets

      - name: Run autogen script
        run: ./autogen.sh

      - name: Configure project
        run: |
          CONFIG_SITE=$PWD/depends/x86_64-linux-gnu/share/config.site \
          ./configure \
          --enable-gui \
          --disable-bench \
          --disable-tests \
          --disable-dependency-tracking \
          --disable-werror \
          --prefix=`pwd`/depends/x86_64-linux-gnu \
          --bindir=`pwd`/release/bin \
          --libdir=`pwd`/release/lib

      - name: Compile project
        run: make
