--- a/qtwebkit/Source/WebCore/platform/graphics/ImageBuffer.cpp
+++ b/qtwebkit/Source/WebCore/platform/graphics/ImageBuffer.cpp
@@ -116,3 +116,69 @@
 }
 
 }
+
+
+#include <cstdint>
+
+#if defined(__i386__) || defined(__arm__)
+
+extern "C" int64_t __udivmoddi4(uint64_t u, uint64_t v, uint64_t* rp);
+
+extern "C" int64_t __wrap___divmoddi4(int64_t u, int64_t v, int64_t* rp)
+{
+    int32_t c1 = 0, c2 = 0;
+    int64_t uu = u, vv = v;
+    int64_t w;
+    int64_t r;
+
+    if (uu < 0) {
+        c1 = ~c1, c2 = ~c2, uu = -uu;
+    }
+    if (vv < 0) {
+        c1 = ~c1, vv = -vv;
+    }
+
+    w = __udivmoddi4(uu, vv, (uint64_t*)&r);
+    if (c1)
+        w = -w;
+    if (c2)
+        r = -r;
+
+    *rp = r;
+    return w;
+}
+#endif
+
+
+extern "C" float log2f_old(float x);
+#ifdef __i386__
+__asm(".symver log2f_old,log2f@GLIBC_2.1");
+#elif defined(__amd64__)
+__asm(".symver log2f_old,log2f@GLIBC_2.2.5");
+#elif defined(__arm__)
+__asm(".symver log2f_old,log2f@GLIBC_2.4");
+#elif defined(__aarch64__)
+__asm(".symver log2f_old,log2f@GLIBC_2.17");
+#endif
+extern "C" float __wrap_log2f(float x)
+{
+    return log2f_old(x);
+}
+
+
+
+extern "C" float powf_old(float x, float y);
+#ifdef __i386__
+__asm(".symver powf_old,powf@GLIBC_2.0");
+#elif defined(__amd64__)
+__asm(".symver powf_old,powf@GLIBC_2.2.5");
+#elif defined(__arm__)
+__asm(".symver powf_old,powf@GLIBC_2.4");
+#elif defined(__aarch64__)
+__asm(".symver powf_old,powf@GLIBC_2.17");
+#endif
+extern "C" float __wrap_powf(float x, float y)
+{
+    return powf_old(x, y);
+}
+

